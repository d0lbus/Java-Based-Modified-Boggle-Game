package TestingGrounds.GameSystem;


/**
* TestingGrounds/GameSystem/GameServerOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from GameSystem.idl
* Wednesday, May 15, 2024 8:33:40 AM SGT
*/

public interface GameServerOperations 
{
  boolean login (String username, String password, org.omg.CORBA.StringHolder sessionToken, TestingGrounds.GameSystem.CallbackInterface cbi) throws TestingGrounds.GameSystem.InvalidCredentials, TestingGrounds.GameSystem.AlreadyLoggedIn;
  boolean logout (String sessionToken);
  String hostGame (String sessionToken, TestingGrounds.GameSystem.CallbackInterface cbi) throws java.sql.SQLException;
  String joinRandomGame (String sessionToken, TestingGrounds.GameSystem.CallbackInterface cbi) throws TestingGrounds.GameSystem.NoWaitingGames, java.sql.SQLException;
  String joinGame (String sessionToken, String gameId) throws TestingGrounds.GameSystem.InvalidGameCode, TestingGrounds.GameSystem.GameAlreadyActive, java.sql.SQLException;
  boolean startGame (String sessionToken, String gameId) throws java.sql.SQLException;
  void submitWord (String sessionToken, String gameId, String word) throws TestingGrounds.GameSystem.InvalidWord, java.sql.SQLException;
  String getLetters (String sessionToken, String gameId);
  void updateSecondsPerWaiting (int newSeconds);
  boolean ping ();
  boolean isServerConnected () throws TestingGrounds.GameSystem.lossConnection;
} // interface GameServerOperations
