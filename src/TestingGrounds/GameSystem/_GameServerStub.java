package TestingGrounds.GameSystem;


/**
* TestingGrounds.GameSystem/_GameServerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from TestingGrounds.GameSystem.idl
* Monday, May 6, 2024 3:02:39 AM CST
*/

public class _GameServerStub extends org.omg.CORBA.portable.ObjectImpl implements TestingGrounds.GameSystem.GameServer
{

  public boolean login (String username, String password, org.omg.CORBA.StringHolder sessionToken, TestingGrounds.GameSystem.CallbackInterface cbi)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("login", true);
                $out.write_string (username);
                $out.write_string (password);
                TestingGrounds.GameSystem.CallbackInterfaceHelper.write ($out, cbi);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                sessionToken.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return login (username, password, sessionToken, cbi        );
            } finally {
                _releaseReply ($in);
            }
  } // login

  public boolean logout (String sessionToken)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("logout", true);
                $out.write_string (sessionToken);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return logout (sessionToken        );
            } finally {
                _releaseReply ($in);
            }
  } // logout

  public String hostGame (String sessionToken, TestingGrounds.GameSystem.CallbackInterface cbi)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("hostGame", true);
                $out.write_string (sessionToken);
                TestingGrounds.GameSystem.CallbackInterfaceHelper.write ($out, cbi);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return hostGame (sessionToken, cbi        );
            } finally {
                _releaseReply ($in);
            }
  } // hostGame

  public boolean joinRandomGame (String sessionToken, TestingGrounds.GameSystem.CallbackInterface cbi)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("joinRandomGame", true);
                $out.write_string (sessionToken);
                TestingGrounds.GameSystem.CallbackInterfaceHelper.write ($out, cbi);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return joinRandomGame (sessionToken, cbi        );
            } finally {
                _releaseReply ($in);
            }
  } // joinRandomGame

  public boolean joinGame (String sessionToken, String gameId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("joinGame", true);
                $out.write_string (sessionToken);
                $out.write_string (gameId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return joinGame (sessionToken, gameId        );
            } finally {
                _releaseReply ($in);
            }
  } // joinGame

  public boolean startGame (String sessionToken, String gameId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("startGame", true);
                $out.write_string (sessionToken);
                $out.write_string (gameId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return startGame (sessionToken, gameId        );
            } finally {
                _releaseReply ($in);
            }
  } // startGame

  public void submitWord (String sessionToken, String gameId, String word)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("submitWord", true);
                $out.write_string (sessionToken);
                $out.write_string (gameId);
                $out.write_string (word);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                submitWord (sessionToken, gameId, word        );
            } finally {
                _releaseReply ($in);
            }
  } // submitWord

  public String getLetters (String sessionToken, String gameId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLetters", true);
                $out.write_string (sessionToken);
                $out.write_string (gameId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLetters (sessionToken, gameId        );
            } finally {
                _releaseReply ($in);
            }
  } // getLetters

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:TestingGrounds.GameSystem/GameServer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _GameServerStub
